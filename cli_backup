#compdef cf
#autoload

local -a _1st_arguments
_1st_arguments=(
    'create-quota':'Define a new resource quota'
    'delete-quota':'Delete a quota'
    'quota':'Show quota info'
    'quotas':'List available usage quotas'
    'update-quota':'Update an existing resource quota'
    'passwd':'Change user password'
    'update-service-broker':'Update a service broker'
    'service-brokers':'List service brokers'
    'create-service-broker':'Create a service broker'
    'rename-service-broker':'Rename a service broker'
    'delete-service-broker':'Delete a service broker'
    'share-private-domain':'Share a private domain with an org'
    'unshare-private-domain':'Unshare a private domain with an org'
    'create-org':'Create an org'
    'rename-org':'Rename an org'
    'org':'Show org info'
    'set-quota':'Assign a quota to an org'
    'delete-org':'Delete an org'
    'create-space':'Create a space'
    'delete-space':'Delete a space'
    'disallow-space-ssh':'Disallow SSH access for the space'
    'spaces':'List all spaces in an org'
    'allow-space-ssh':'Allow SSH access for the space'
    'space':'Show space info'
    'rename-space':'Rename a space'
    'space-ssh-allowed':'Reports whether SSH is allowed in a space'
    'logout':'Log user out'
    'config':'Write default values to the config'
    'feature-flags':'Retrieve list of feature flags with status of each flag-able feature'
    'enable-feature-flag':'Enable the use of a feature so that users have access to and can use the feature.'
    'feature-flag':'Retrieve an individual feature flag with status'
    'disable-feature-flag':'Disable the use of a feature so that users have access to and can use the feature.'
    'oauth-token':'Retrieve and display the OAuth token for the current session'
    'disable-service-access':'Disable access to a service or service plan for one or all org'
    'service-access':'List service access settings'
    'enable-service-access':'Enable access to a service or service plan for one or all orgs'
    'stack':'Show information for a stack a stack is a pre-built file system, including an operating system, that can run apps'
    'staging-security-groups':'List security groups in the staging set for applications'
    'running-security-groups':'List security groups in the set of security groups for running applications'
    'bind-security-group':'Bind a security group to a space'
    'security-group':'Show a single security group'
    'unbind-security-group':'Unbind a security group from a space'
    'unbind-staging-security-group':'Unbind a security group from the set of security groups for staging applications'
    'bind-running-security-group':'Bind a security group to the list of security groups to be used for running applications'
    'bind-staging-security-group':'Bind a security group to the list of security groups to be used for staging applications'
    'delete-security-group':'Deletes a security group'
    'create-security-group':'Create a security group'
    'update-security-group':'Update a security group'
    'security-groups':'List all security groups'
    'unbind-running-security-group':'Unbind a security group from the set of security groups for running applications'
    'target':'Set or view the targeted org or space'
    'add-plugin-repo':'Add a new plugin repository'
    'list-plugin-repos':'List all the added plugin repository'
    'repo-plugins':'List all available plugins in all added repositories'
    'remove-plugin-repo':'Remove a plugin repository'
    'service-auth-tokens':'List service auth tokens'
    'delete-service-auth-token':'Delete a service auth token'
    'create-service-auth-token':'Create a service auth token'
    'update-service-auth-token':'Update a service auth token'
    'stacks':'List all stacks a stack is a pre-built file system, including an operating system, that can run apps'
    'curl':'Executes a raw request, content-type set to application/json by default'
    'create-service-key':'Create key for a service instance'
    'delete-service-key':'Delete a service key'
    'service-key':'Show service key info'
    'service-keys':'List keys for a service instance'
    'space-quota':'Show space quota info'
    'update-space-quota':'Update an existing space quota'
    'create-space-quota':'Define a new space resource quota'
    'set-space-quota':'Assign a space quota definition to a space'
    'delete-space-quota':'Delete a space quota definition and unassign the space quota from all spaces'
    'unset-space-quota':'Unassign a quota from a space'
    'space-quotas':'List available space resource quotas'
    'buildpacks':'List all buildpacks'
    'create-buildpack':'Create a buildpack'
    'rename-buildpack':'Rename a buildpack'
    'update-buildpack':'Update a buildpack'
    'delete-buildpack':'Delete a buildpack'
    'api':'Set or view target api url'
    'login':'Log user in'
    'set-org-role':'Assign an org role to a user'
    'unset-org-role':'Remove an org role from a user'
    'space-users':'Show space users by role'
    'delete-user':'Delete a user'
    'create-user':'Create a new user'
    'org-users':'Show org users by role'
    'unset-space-role':'Remove a space role from a user'
    'set-space-role':'Assign a space role to a user'
    'ssh-code':'Get a one time password for ssh clients'
    'scale':'Change or view the instance count, disk space limit, and memory limit for an app'
    'app':'Display health and status for app'
    'get-health-check':'Get the health_check_type value of an app'
    'restart':'Restart an app'
    'start':'Start an app'
    'set-health-check':'Set health_check_type flag to either 'port' or 'none''
    'apps':'List all apps in the target space'
    'logs':'Tail or show recent logs for an app'
    'stop':'Stop an app'
    'disable-ssh':'Disable ssh for the application'
    'set-env':'Set an env variable for an app'
    'ssh':'SSH to an application container instance'
    'files':'Print out a list of files in a directory or the contents of a specific file'
    'unset-env':'Remove an env variable'
    'delete':'Delete an app'
    'events':'Show recent app events'
    'copy-source':'Make a copy of app source code from one application to another.  Unless overridden, the copy-source command will restart the application.'
    'enable-ssh':'Enable ssh for the application'
    'push':'Push a new app or sync changes to an existing app'
    'restart-app-instance':'Terminate the running application Instance at the given index and instantiate a new instance of the application with the same index'
    'restage':'Restage an app'
    'rename':'Rename an app'
    'ssh-enabled':'Reports whether SSH is enabled on an application container instance'
    'env':'Show all env variables for an app'
    'delete-domain':'Delete a domain'
    'domains':'List domains in the target org'
    'create-domain':'Create a domain in an org for later use'
    'delete-shared-domain':'Delete a shared domain'
    'create-shared-domain':'Create a domain that can be used by all orgs (admin-only)'
    'bind-service':'Bind a service instance to an app'
    'purge-service-instance':'Recursively remove a service instance and child objects from Cloud Foundry database without making requests to a service broker'
    'create-user-provided-service':'Make a user-provided service instance available to cf apps'
    'update-user-provided-service':'Update user-provided service instance name value pairs'
    'unbind-service':'Unbind a service instance from an app'
    'create-service':'Create a service instance'
    'services':'List all service instances in the target space'
    'delete-service':'Delete a service instance'
    'migrate-service-instances':'Migrate service instances from one service plan to another'
    'service':'Show service instance info'
    'marketplace':'List available offerings in the marketplace'
    'update-service':'Update a service instance'
    'purge-service-offering':'Recursively remove a service and child objects from Cloud Foundry database without making requests to a service broker'
    'rename-service':'Rename a service instance'
    'delete-route':'Delete a route'
    'check-route':'Perform a simple check to determine whether a route currently exists or not.'
    'routes':'List all routes in the current space or the current organization'
    'create-route':'Create a url route in a space for later use'
    'unmap-route':'Remove a url route from an app'
    'map-route':'Add a url route to an app'
    'delete-orphaned-routes':'Delete all orphaned routes e.g. those that are not mapped to an app'
    'set-staging-environment-variable-group':'Pass parameters as JSON to create a staging environment variable group'
    'running-environment-variable-group':'Retrieve the contents of the running environment variable group'
    'set-running-environment-variable-group':'Pass parameters as JSON to create a running environment variable group'
    'staging-environment-variable-group':'Retrieve the contents of the staging environment variable group'
    'help':'Show help'
    'auth':'Authenticate user non-interactively'
    'install-plugin':'Install the plugin defined in command argument'
    'plugins':'list all available plugin commands'
    'uninstall-plugin':'Uninstall the plugin defined in command argument'
    'router-groups':'List router groups'
    'create-app-manifest':'Create an app manifest for an app that has been pushed successfully.'
)

#_arguments '*:: :->command'

if (( CURRENT == 1 )); then
    _describe -t commands "cf command" _1st_arguments
    return
fi
